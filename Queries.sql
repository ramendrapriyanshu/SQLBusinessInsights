-- List all orders along with the corresponding customer name and city.

select o.orderID, c.customerID, c.companyName, c.city
from orders o join customers c on o.customerID = c.customerID;


-- Calculate the total quantity ordered for each product.

select p.productID, p.productName, sum(od.quantity) as product_quantity
from products p join order_details od on p.productID = od.productID
group by p.productID
order by product_quantity desc;


-- Percentage of Total Revenue by Product

select p.productID, p.productName, 
-- sum(od.quantity*od.unitPrice*(1 - od.discount)) as product_revenue,
round((sum(od.quantity*od.unitPrice*(1 - od.discount)) / 
(select sum(od2.quantity*od2.unitPrice*(1 - od2.discount)) as total_revenue from order_details od2))*100, 2) as perc_revn
from products p join order_details od on p.productID = od.productID
group by p.productID
order by perc_revn desc;



-- Find the top 5 customers with the highest total spending on orders.

select o.customerID, sum(od.quantity*od.unitPrice*(1 - od.discount)) as customer_spend
from orders o join order_details od on o.orderID = od.orderID
group by o.customerID
order by customer_spend desc limit 5; 


-- Update the discount of orders for discontinued products to zero.

update order_details 
set discount = 0
where productID in 
	(select productID 
    from products 
    where discontinued = 1);
    

-- Calculate the average freight cost for each shipper and show only those with above-average costs.

select o.shipperID, avg(o.freight) as avg_freight
from orders o 
group by o.shipperID
having avg_freight > (select avg(orders.freight) from orders);



-- Find the monthly sales revenue generated by each employee.

select year(o.orderDate) as year_,Month(o.orderDate) as month_, o.employeeID, 
sum(od.quantity*od.unitPrice*(1 - od.discount)) monthly_sales
from orders o join order_details od on o.orderID= od.orderID
group by year_, month_, o.employeeID
order by year_, month_, o.employeeID;



-- Identify which shipping company handles the most orders where the total order value exceeds $500.

with above_500_orders as
	(select od.orderID, sum(od.quantity*od.unitPrice*(1 - od.discount)) as total_order_value
	from order_details od 
	group by od.orderID 
	having total_order_value>500)
select o.shipperID, count(*) as high_value_orders
from above_500_orders a5o join orders o on a5o.orderID = o.orderID
group by o.shipperID
order by high_value_orders desc;

-- Identify which employee has the highest sales (in terms of revenue) in each product category.

with cat_emp_sales as (
	select cat.categoryID, e.employeeID, sum(od.quantity*od.unitPrice*(1 - od.discount)) as emp_cat_sales
	from categories as cat join products p on cat.categoryID = p.categoryID
	join order_details od on od.productID= p.productID
	join orders o on o.orderID= od.orderID
	join employees e on e.employeeID=o.employeeID
	group by cat.categoryID, e.employeeID
	order by cat.categoryID, e.employeeID)
select ces.categoryID, ces.employeeID, e.employeeName
from cat_emp_sales ces join 
	(select ces2.categoryID, max(emp_cat_sales) as max_sales
    from cat_emp_sales ces2
    group by ces2.categoryID
    ) as cat_max_sales 
on ces.categoryID = cat_max_sales.categoryID and ces.emp_cat_sales = cat_max_sales.max_sales
join employees e on e.employeeID = ces.employeeID;



